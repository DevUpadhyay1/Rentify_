# Generated by Django 5.2.4 on 2025-10-16 11:24

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Items', '0015_remove_item_is_available'),
        ('Rental', '0002_alter_booking_options_alter_bookinghistory_options_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ItemReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('overall_rating', models.IntegerField(help_text='Overall rating (1-5 stars)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('condition_rating', models.IntegerField(help_text='Item condition rating', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('accuracy_rating', models.IntegerField(help_text='Description accuracy rating', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('value_rating', models.IntegerField(help_text='Value for money rating', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('title', models.CharField(help_text='Review title/summary', max_length=200)),
                ('comment', models.TextField(help_text='Detailed review')),
                ('pros', models.TextField(blank=True, help_text='What you liked (optional)')),
                ('cons', models.TextField(blank=True, help_text='What could be improved (optional)')),
                ('would_recommend', models.BooleanField(default=True, help_text='Would you recommend this item?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('helpful_count', models.IntegerField(default=0)),
                ('booking', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='item_review', to='Rental.booking')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='Items.item')),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='item_reviews_given', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['-created_at'], name='Review_item_created_179dcd_idx'), models.Index(fields=['item', '-overall_rating'], name='Review_item_item_id_5ba9a3_idx')],
                'unique_together': {('item', 'reviewer', 'booking')},
            },
        ),
        migrations.CreateModel(
            name='OwnerReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('overall_rating', models.IntegerField(help_text='Overall rating (1-5 stars)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('communication_rating', models.IntegerField(help_text='Communication quality', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('responsiveness_rating', models.IntegerField(help_text='Response time', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('friendliness_rating', models.IntegerField(help_text='Friendliness and professionalism', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('title', models.CharField(help_text='Review title', max_length=200)),
                ('comment', models.TextField(help_text='Detailed review')),
                ('would_rent_again', models.BooleanField(default=True, help_text='Would you rent from this owner again?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('helpful_count', models.IntegerField(default=0)),
                ('booking', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='owner_review', to='Rental.booking')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner_reviews_received', to=settings.AUTH_USER_MODEL)),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner_reviews_given', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['-created_at'], name='Review_owne_created_2b5558_idx'), models.Index(fields=['owner', '-overall_rating'], name='Review_owne_owner_i_722ad0_idx')],
                'unique_together': {('owner', 'reviewer', 'booking')},
            },
        ),
        migrations.CreateModel(
            name='RenterReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('overall_rating', models.IntegerField(help_text='Overall rating (1-5 stars)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('item_care_rating', models.IntegerField(help_text='How well they took care of the item', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('communication_rating', models.IntegerField(help_text='Communication quality', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('return_condition_rating', models.IntegerField(help_text='Condition of item upon return', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('punctuality_rating', models.IntegerField(help_text='Returned on time', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('title', models.CharField(help_text='Review title', max_length=200)),
                ('comment', models.TextField(help_text='Detailed review')),
                ('returned_clean', models.BooleanField(default=True, help_text='Was the item returned clean?')),
                ('returned_on_time', models.BooleanField(default=True, help_text='Was the item returned on time?')),
                ('any_damage', models.BooleanField(default=False, help_text='Was there any damage?')),
                ('damage_description', models.TextField(blank=True, help_text='Describe any damage')),
                ('would_rent_to_again', models.BooleanField(default=True, help_text='Would you rent to this person again?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('helpful_count', models.IntegerField(default=0)),
                ('booking', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='renter_review', to='Rental.booking')),
                ('renter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='renter_reviews_received', to=settings.AUTH_USER_MODEL)),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='renter_reviews_given', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['-created_at'], name='Review_rent_created_adf298_idx'), models.Index(fields=['renter', '-overall_rating'], name='Review_rent_renter__fa30fc_idx')],
                'unique_together': {('renter', 'reviewer', 'booking')},
            },
        ),
        migrations.CreateModel(
            name='ReviewHelpful',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_type', models.CharField(choices=[('item', 'Item Review'), ('owner', 'Owner Review'), ('renter', 'Renter Review')], max_length=10)),
                ('review_id', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='helpful_votes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['review_type', 'review_id'], name='Review_revi_review__72e338_idx')],
                'unique_together': {('user', 'review_type', 'review_id')},
            },
        ),
        migrations.CreateModel(
            name='ReviewResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_type', models.CharField(choices=[('item', 'Item Review'), ('owner', 'Owner Review'), ('renter', 'Renter Review')], max_length=10)),
                ('review_id', models.IntegerField()),
                ('response', models.TextField(help_text='Response to the review')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('responder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_responses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('review_type', 'review_id', 'responder')},
            },
        ),
    ]
